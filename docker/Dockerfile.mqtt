###################
# BUILD FOR LOCAL DEVELOPMENT
###################
FROM node:18-slim AS development

WORKDIR /usr/app
COPY --chown=node:node package.json .
COPY --chown=node:node yarn.lock .
COPY --chown=node:node .yarnrc.yml .
COPY --chown=node:node .yarn ./.yarn
# Needed to build common package
COPY --chown=node:node tsconfig.json .

WORKDIR /usr/app/packages/common
COPY --chown=node:node packages/common/package.json .
# Needed to build common package
COPY --chown=node:node packages/common/tsconfig.json .
COPY packages/common/src ./src

WORKDIR /usr/app/packages/mqtt
COPY --chown=node:node packages/mqtt/package.json .

WORKDIR /usr/app
RUN yarn workspace @huebot-hub-core/common install
# Need to build common before running mqtt package install or 
# the build stage will throw common package not found errors
RUN yarn workspace @huebot-hub-core/common build
RUN yarn workspace @huebot-hub-core/mqtt install

COPY --chown=node:node packages/mqtt .packages/mqtt

USER node

###################
# BUILD FOR PRODUCTION
###################
FROM node:18-alpine AS build

WORKDIR /usr/app
COPY --chown=node:node package.json .
COPY --chown=node:node yarn.lock .
COPY --chown=node:node .yarnrc.yml .
COPY --chown=node:node .yarn ./.yarn
COPY --chown=node:node tsconfig.json .
COPY --chown=node:node --from=development /usr/app/node_modules ./node_modules
COPY --chown=node:node --from=development /usr/app/packages/common ./packages/common
COPY --chown=node:node packages/mqtt ./packages/mqtt
RUN yarn workspace @huebot-hub-core/mqtt build

# Needed to use 'yarn workspaces focus' which installs prod deps in current dir (yarn 2)
RUN yarn plugin import workspace-tools

ENV NODE_ENV production

WORKDIR /usr/app/packages/mqtt
# Only install production packages for current folder (overrides install from development stage)
RUN yarn workspaces focus --production

USER node

###################
# PRODUCTION
###################
FROM node:18-alpine As production
LABEL org.opencontainers.image.source https://github.com/huebot-iot/hub-core-next
WORKDIR /usr/app
COPY --chown=node:node package.json .
COPY --chown=node:node --from=build /usr/app/node_modules ./node_modules

WORKDIR /usr/app/packages/common
COPY --chown=node:node packages/common/package.json .
COPY --chown=node:node --from=build /usr/app/packages/common/dist ./dist

WORKDIR /usr/app/packages/mqtt
COPY --chown=node:node --from=build /usr/app/packages/mqtt/dist ./dist
ENV NODE_ENV production
CMD [ "node", "dist/main.js" ]